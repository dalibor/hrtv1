- klass = outlay.class.to_s
- @splits ||= sort_splits(outlay.implementer_splits)
- # Can't paginate form if there are errors therefore only
- # show splits with errors if there are more than 50 errors

:javascript
  var selectBox = "#{escape_javascript select_tag :activity_implementer_splits_attributes_provider_mask, options_for_select(Organization.find(:all).map { |o| [o.display_name(100), o.id]},  :class => "name js_implementer_select js_combobox f_from" )}"
  var inputBox = "#{escape_javascript hidden_field_tag :data_response_id, :html => {:class => "data_response_id"}}"
  var _data_response_id = "#{@response.id}"
  var _POSITION = "#{controller.controller_name == "activities" ? "4" : "5"}"
  var _TYPE = "#{controller.controller_name.singularize}"

%ul.wrapped.last
  - unless bulk_review || outlay.new_record? || @split_errors
    = will_paginate @splits
    %br
  - if @split_errors && @splits.size > 50
    #filter_help
      %p
        = "Showing #{pluralize(@split_errors.count, 'Implementer')} with errors"
  %table.input_table
    %thead
      %tr
        %th.title
          Implementer
          %span
            - link_to "#", :title => "Direct implementer ('service provider') for this #{klass}. i.e. your own organization or another organization that carried out this work e.g. a NGO, a Health Facility Institution, Government office, or a District.", :class => 'tooltip' do
              = image_tag "tooltip.png"
        %th
          .right_justified Past Expenditure
        %th
          .right_justified Current Budget
        %th.delete
    %tbody
      - if outlay.new_record? && @splits.empty?
        - self_org_id = outlay.organization.id
        - @splits.build(:organization_id => self_org_id, :data_response_id => outlay.data_response_id)
      - @splits.each do |is|
        - f.semantic_fields_for :implementer_splits, is do |ff|
          = render 'shared/outlays/implementer_splits', :ff => ff

      - if @splits.size < 50 || @split_errors
        - blank_rows.times do
          - f.object.implementer_splits.build unless f.object.implementer_splits.length > 0
          - new_object = f.object.class.reflect_on_association(:implementer_splits).klass.new
          - f.fields_for(:implementer_splits, new_object) do |builder|
            = render "shared/outlays/implementer_split_fields", :f => builder

      %tr.total
        %td
          - unless bulk_review
            %span= link_to_add_fields "Add Implementer", f, :implementer_splits, "shared/outlays/", :class => "create_alt marginless"

        %td
          %p.total.js_total_spend
            %span.label.left Total
            %span.amount.right= number_with_precision(outlay.implementer_splits_total(:spend), :precision => 2)
            %span.currency.right= outlay.currency
        %td
          %p.total.js_total_budget
            %span.label.left Total
            %span.amount.right= number_with_precision(outlay.implementer_splits_total(:budget), :precision => 2)
            %span.currency.right= outlay.currency
  - unless bulk_review || outlay.new_record? || @split_errors
    = will_paginate @splits
    %br
